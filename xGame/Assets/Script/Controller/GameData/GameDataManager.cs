// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using com.CommonUtility.Common;
using System.Collections.Generic;
using com.CommonUtility.CommonData;

namespace Controller.GameData
{
	public class GameDataManager : TSingleton<GameDataManager>, IDisposable
	{
		#region IDisposable implementation

		public void Dispose ()
		{
			//throw new NotImplementedException ();
			foreach (var item in m_dicResCount) {

				item.Value.Dispose();	
			}
			m_dicResCount.Clear ();
		}

		public GameDataManager()
		{

		}

		public void AddValueToResourceItem(int ID, float value)
		{
			TNotifyVariable<float> res = _GetResourceItem(ID);
			if (null != res) 
			{
				res.Value += value;			
			}
			else
			{
				res = new TNotifyVariable<float>(value);
				m_dicResCount.Add(ID, res);
			}

			//UnityEngine.Debug.Log ("ID " + ID + " value " + res.Value);
		}

		public float GetResourceItemValue(int resID)
		{
			TNotifyVariable<float> res = _GetResourceItem (resID);
			if (null == res) 
			{
				return 0;
			}

			return res.Value;
		}

		public void AddResourceItemChangedCallback(int resID, TNotifyVariable<float>.VarChangeNotify callback)
		{
			TNotifyVariable<float> res = _GetResourceItem (resID);
			if (null == res) 
			{
				res = new TNotifyVariable<float>(0);
				m_dicResCount.Add(resID, res);
			}

			res.AddVarChangeCallback (callback);
		}

		public void RemoveResourceItemChangeCallback(int resID, TNotifyVariable<float>.VarChangeNotify callback)
		{
			TNotifyVariable<float> res = _GetResourceItem (resID);
			if (null != res) 
			{
				res.RemoveVarChangeCallback(callback);
			}
		}

		#endregion

		#region Private Functsion

		private TNotifyVariable<float> _GetResourceItem(int ID)
		{
			TNotifyVariable<float> retu = null;

			m_dicResCount.TryGetValue (ID, out retu);

			return retu;
		}

		#endregion 

		#region Memeber

		private Dictionary<int, TNotifyVariable<float>> m_dicResCount = new Dictionary<int, TNotifyVariable<float>>();
		#endregion
	}
}

